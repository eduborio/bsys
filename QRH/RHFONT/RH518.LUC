/////////////////////////////////////////////////////////////////////////////
// SISTEMA....: FOLHA DE PAGAMENTO
// OBJETIVO...: EMISSAO DA GUIA DE INSS (GRPS) - ACUMULADA
// ANALISTA...: LUCINEIDE VILAR POSSEBOM
// PROGRAMADOR: A MESMA
// INICIO.....: SETEMBRO DE 1998
// OBS........:
// ALTERACOES.:

#include "rh.ch"
#include "inkey.ch"

// DECLARACAO E INICIALIZACAO DE VARIAVEIS __________________________________

local   nCONT

private sBLOCO1   := qlbloc("B518B","QBLOC.GLO") // bloco ambiente

private lPAUSA    := .T.
private cLOCALIMP := ""
private cMENSA1
private cMENSA2
private nAUTO
private cAMBIENTE := "M"
private cANOMES
private cMESANO   := right(XANOMES,2) + left(XANOMES,4)

// LOOP INICIAL PARA PERMANECER DENTRO DA OPCAO _____________________________

do while .T.

   qlbloc(5,0,"B518A","QBLOC.GLO")

   qmensa("<Pressione ESC para Cancelar>")

   qesco(08,15,@cAMBIENTE,sBLOCO1)

   qsay(08,15,qabrev(cAMBIENTE,"M1",{"Mensal","13. Sal rio"}))

   if lastkey() == K_ESC ; Exit ; endif

   qgetx(08,39,@cMESANO,"@R 99/9999")

   if lastkey() == K_ESC ; Exit ; endif

   cANOMES  := right(cMESANO,4) + left(cMESANO,2)

   cLOCALIMP := ""

   // VAI FAZER SELECAO DE EMPRESAS ? _______________________________________

   private aEMP := qmarcaemp()

   if lastkey() == K_ESC ; exit ; endif

   // REALIZA PAUSA P/ SOLICITAR DADOS INDIVIDUAIS ? ________________________

   qmensa("<Pressione ESC para refazer>")

   if alert("Quer informar Valor p/ Aut“nomos;e mensagens individualmente ?",{"SIM","NŽO"}) == 2
      lPAUSA := .F.
   endif

   if lastkey() == K_ESC ; loop ; endif

   // ACIONA IMPRESSOES _____________________________________________________

   if empty(aEMP)
      i_guia()
   else
      for nCONT := 1 to len(aEMP)
          qseldirect(aEMP[nCONT])
          i_guia()
      next
   endif

enddo

return

/////////////////////////////////////////////////////////////////////////////
// EMISSAO DAS GUIAS SELECIONADAS ___________________________________________

function i_guia

   local lEMISSAO_OK := .T.

   // ABRE OS ARQUIVOS MANUALMENTE __________________________________________

   if ! quse(XDRV_RH,"FUN"      ,{"FU_GRPS" },"R") ; return .F. ; endif
   if ! quse(XDRV_RH,"SITUA"    ,{"SI_MATRI"},"R") ; return .F. ; endif
   if ! quse(XDRV_RH,"BASE"     ,{"BA_MATRI"},"R") ; return .F. ; endif
   if ! quse(XDRV_RH,"LANC"     ,{"LA_MATRI"},"R") ; return .F. ; endif
   if ! quse(XDRV_RH,"GRPS"     ,{"GR_CODIG"},"E") ; return .F. ; endif
   if ! quse(XDRV_RH,"GRPS_ACU" ,{"GRPSA_CO"}) ; return .F. ; endif
   if ! quse(XDRV_RH,"CONFIG") ; return .F. ; endif
   
   SITUA->(dbSetFilter({|| Anomes == cANOMES},"Anomes == cANOMES"))

   GRPS->(dbSetFilter({|| Anomes == cANOMES},"Anomes == cANOMES"))
   
   // RELACIONAMENTO ________________________________________________________

   FUN->(dbSetRelation( "BASE" , {|| Matricula+cANOMES}, "Matricula+cANOMES" ))

   GRPS->(dbSetRelation( "FUN" , {|| Codigo}, "Codigo" ))

   GRPS->(dbgotop())

   // LOOP DE GRPS E SOLICITACAO DE DADOS ___________________________________

   do while ! GRPS->(eof())

      qrsay(1,XRAZAO)
      qrsay(2,GRPS->Descricao)

      XNIVEL  := 3
      nAUTO   := 0
      cMENSA1 := GRPS->Mensa_1
      cMENSA2 := GRPS->Mensa_2

      if lPAUSA
         qgetx(-1,0,@nAUTO,"@E 999,999.99")
         if lastkey() == K_ESC
            lEMISSAO_OK := .F.
            keyboard chr(13)+chr(13)
         endif
         XNIVEL++
         qgetx(-1,0,@cMENSA1)
         if lastkey() == K_ESC
            lEMISSAO_OK := .F.
            keyboard chr(13)
         endif
         XNIVEL++
         qgetx(-1,0,@cMENSA2)
         if lastkey() == K_ESC
            lEMISSAO_OK := .F.
         endif
      endif

      if ! lEMISSAO_OK ; exit ; endif

      i_emissao1()   // emissao de guia individual...

      GRPS->(dbskip())

   enddo

   // FECHA OS ARQUIVOS MANUALMENTE E RETORNA _______________________________

   FUN->(dbclosearea())
   SITUA->(dbclosearea())
   BASE->(dbclosearea())
   LANC->(dbclosearea())
   GRPS->(dbclosearea())
   GRPS_ACU->(dbclosearea())
   CONFIG->(dbclosearea())

return

/////////////////////////////////////////////////////////////////////////////
// EMISSAO DO GRPS __________________________________________________________

static function i_emissao1

   local nTOTSEG := nTOTEMP := nTOTTER := nTOTDED := nTOTLIQ := 0

   local nSOMA, nQUANTFUN := nTBASE1 := nTBASE2 := nACUMULA := 0

   local cCOMPET, cPIC := "@E 9,999,999.99"

   cCOMPET := subs(cANOMES,5,1) + subs(cANOMES,6,1) + "/"
   cCOMPET += left(cANOMES,1) + subs(cANOMES,2,1) + subs(cANOMES,3,1) + subs(cANOMES,4,1)

   // INICIALIZA PROCESSO DE IMPRESSAO ______________________________________

   if ! qinitprn(0,cLOCALIMP) ; return ; endif
   qmensa("imprimindo...")

   if empty(cLOCALIMP)
      cLOCALIMP := XLOCALIMP
   endif

   // LOOP NOS FUNCIONARIOS PARA TOTALIZACOES _______________________________

   do while ! FUN->(eof()) .and. FUN->Grps == GRPS->Codigo
      SITUA->(dbseek(FUN->Matricula))

      qgirabarra()

      qmensa("Aguarde...Verificando dados para impress„o...")

      // SALTA FUNCIONARIOS HOMOLOGADOS OU ADMITIDOS POSTERIORMENTE _________

      if SITUA->Situacao $ " H" .or. FUN->Data_Adm > qfimmes(XDATASYS)
         FUN->(dbskip())
         loop
      endif

      // SALTA FUNCIONARIOS TRANSFERIDOS PARA OUTRA EMPRESA _________________

      if SITUA->Af_cod == "40"
         FUN->(dbskip())
         loop
      endif

      // SOMA QUANTIDADE DE FUNCIONARIOS ATIVOS _____________________________

      if SITUA->Vinculo <> K_DIRETOR
         nQUANTFUN++
      endif

      // TOTALIZA BASE ______________________________________________________

      if LANC->(dbseek(cANOMES+FUN->Matricula+"MS105"))
         if cAMBIENTE == "M"
            nTBASE2 += LANC->Valor
         else
            nTBASE2 := 0.00
         endif
      else
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS106"))
            if cAMBIENTE == "M"
               nTBASE2 += LANC->Valor
            else
               nTBASE2 := 0.00
            endif
         else
            if cAMBIENTE == "M"
               nTBASE1 += BASE->T_inssms + BASE->T_inssfr + BASE->T_inssdt
            else
               nTBASE1 += BASE->T_inss13
            endif
         endif
      endif

      // TOTALIZA VALOR DESCONTADO EM FOLHA _________________________________

      if cAMBIENTE == "M"
         nTOTSEG += BASE->V_inssms + BASE->V_inssfr + BASE->V_inssdt
      else
         nTOTSEG += BASE->V_inss13
      endif

      // TOTALIZA VALOR A DESCONTAR NA GUIA _________________________________
      
      if cAMBIENTE == "M"
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS901")) // SAL.FAM. DO MES
            nTOTDED += LANC->Valor
         endif

         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS902")) // SAL.FAM. MESES ANT.
            nTOTDED += LANC->Valor
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS161")) // SAL. MATERNIDADE MENSAL
            nTOTDED += LANC->Valor //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS281")) // SAL. MATERNIDADE HORA/AULA CURSINHO
            nTOTDED += LANC->Valor //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS282")) // SAL. MATERNIDADE HORA/AULA R1
            nTOTDED += LANC->Valor // - nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS283")) // SAL. MATERNIDADE HORA/AULA R2
            nTOTDED += LANC->Valor  //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS284")) // SAL. MATERNIDADE HORA/AULA R2-1
            nTOTDED += LANC->Valor  //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS285")) // SAL. MATERNIDADE HORA/AULA R2-2
            nTOTDED += LANC->Valor //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS286")) // SAL. MATERNIDADE HORA/AULA R3
            nTOTDED += LANC->Valor  //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS287")) // SAL. MATERNIDADE HORA/AULA S1
            nTOTDED += LANC->Valor //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS288")) // SAL. MATERNIDADE HORA/AULA S2
            nTOTDED += LANC->Valor //- nVALOR
         endif

//         nVALOR:= i_inss(FUN->Matricula)
         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS289")) // SAL. MATERNIDADE HORA/AULA TST
            nTOTDED += LANC->Valor //- nVALOR
         endif

         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS290")) // DSR SOBRE SALARIO MATERNIDADE HORA/AULA
            nTOTDED += LANC->Valor
         endif

         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS291")) // PRODUTIVIDADE SOBRE SALARIO MATERNIDADE HORA/AULA
            nTOTDED += LANC->Valor
         endif

         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS292")) // HORA ATIVIDADE SOBRE SALARIO MATERNIDADE HORA/AULA
            nTOTDED += LANC->Valor
         endif

         if LANC->(dbseek(cANOMES+FUN->Matricula+"MS480")) // AUXILIO NATALIDADE
            nTOTDED += LANC->Valor
         endif

      endif

      FUN->(dbskip())

   enddo

   qmensa()

   // TOTALIZA AUTONOMOS, EMPRESA E TERCEIROS _______________________________

   nTOTEMP := nTBASE1 * (GRPS->Perc_empr + GRPS->Perc_acid) / 100
   nTOTEMP += nTBASE2 * GRPS->Perc_prol / 100
   nTOTEMP += nAUTO   * GRPS->Perc_auto / 100
   nTBASE2 += nAUTO
   nTOTTER := nTBASE1 * GRPS->Perc_terc / 100

   // APLICA ROUND PARA EVITAR PROBLEMAS DE ERRO NA SOMA ____________________

   nTOTSEG := round(nTOTSEG,2)
   nTOTEMP := round(nTOTEMP,2)
   nTOTTER := round(nTOTTER,2)
   nTOTDED := round(nTOTDED,2)

   if CONFIG->Gr_simples == "S"
      nACUMULA := nTOTSEG - nTOTDED
   else
      nACUMULA := nTOTSEG + nTOTEMP + nTOTTER - nTOTDED
   endif

   if nACUMULA <= 25.00   // se a guia for menor que R$ 25,00 acumula

      if ! GRPS_ACU->(dbseek(GRPS->Codigo))  // senao achar grava o valor do mes e nao imprime

         if CONFIG->Verif_grps == .F.

            if GRPS_ACU->(qrlock()) .and. CONFIG->(qrlock()) .and. GRPS_ACU->(qappend())
               if CONFIG->Gr_simples == "N"
                  replace GRPS_ACU->Cod_grps with GRPS->Codigo
                  replace GRPS_ACU->Valor_acum with nACUMULA
                  replace GRPS_ACU->Tot_seg    with nTOTSEG
                  replace GRPS_ACU->Tot_emp    with nTOTEMP
                  replace GRPS_ACU->Tot_ter    with nTOTTER
                  replace GRPS_ACU->Tot_ded    with nTOTDED
                  replace GRPS_ACU->Tot_sal    with nTBASE1
               else
                  replace GRPS_ACU->Cod_grps with GRPS->Codigo
                  replace GRPS_ACU->Valor_acum with nACUMULA
                  replace GRPS_ACU->Tot_seg    with nTOTSEG
                  replace GRPS_ACU->Tot_ded    with nTOTDED
                  replace GRPS_ACU->Tot_sal    with nTBASE1
               endif
               replace CONFIG->Verif_grps  with .T.
               GRPS_ACU->(qunlock())
               CONFIG->(qunlock())
            else
               qm1();return
            endif

         else
            qmensa("A guia da GRPS j  foi emitida neste mˆs...")
         endif

         qmensa("Esta Guia ‚ menor que R$ 25,00 !!","B")

         nACUMULA := 0

         return

      else

         if (GRPS_ACU->Valor_acum + nACUMULA) <= 25.00 .and. (GRPS_ACU->Valor_acum + nACUMULA) > 0 // se achar e a soma nao chegar no valor acumula e nao imprime

            if CONFIG->Verif_grps == .F.

               if GRPS_ACU->(qrlock()) .and. CONFIG->(qrlock())
                  if CONFIG->Gr_simples == "N"
                     replace GRPS_ACU->Valor_acum with ( GRPS_ACU->Valor_acum + nACUMULA )
                     replace GRPS_ACU->Tot_seg    with ( GRPS_ACU->Tot_seg + nTOTSEG)
                     replace GRPS_ACU->Tot_emp    with ( GRPS_ACU->Tot_emp + nTOTEMP)
                     replace GRPS_ACU->Tot_ter    with ( GRPS_ACU->Tot_ter + nTOTTER)
                     replace GRPS_ACU->Tot_ded    with ( GRPS_ACU->Tot_ded + nTOTDED)
                     replace GRPS_ACU->Tot_sal    with ( GRPS_ACU->Tot_sal + nTBASE1)
                  else
                     replace GRPS_ACU->Valor_acum with ( GRPS_ACU->Valor_acum + nACUMULA )
                     replace GRPS_ACU->Tot_seg    with ( GRPS_ACU->Tot_seg + nTOTSEG)
                     replace GRPS_ACU->Tot_ded    with ( GRPS_ACU->Tot_ded + nTOTDED)
                     replace GRPS_ACU->Tot_sal    with ( GRPS_ACU->Tot_sal + nTBASE1)
                  endif
                  replace CONFIG->Verif_grps  with .T.
                  GRPS_ACU->(qunlock())
                  CONFIG->(qunlock())
               else
                  qm1();return
               endif

            else
               qmensa("A guia da GRPS j  foi emitida neste mˆs...")
            endif

            qmensa("Esta Guia ‚ menor que R$ 25,00 !!","B")

            nACUMULA := 0

            return


         else  // se achar e a soma chegar no valor imprime o valor acumulado e zera o acumulo gerado

            nACUMULA := GRPS_ACU->Valor_acum

            nTOTSEG  += GRPS_ACU->Tot_seg
            nTOTEMP  += GRPS_ACU->Tot_emp
            nTOTTER  += GRPS_ACU->Tot_ter
            nTOTDED  += GRPS_ACU->Tot_ded
            nTBASE1  += GRPS_ACU->Tot_sal

            if GRPS_ACU->(qrlock())
               replace GRPS_ACU->Valor_acum with 0
               replace GRPS_ACU->Tot_seg    with 0
               replace GRPS_ACU->Tot_emp    with 0
               replace GRPS_ACU->Tot_ter    with 0
               replace GRPS_ACU->Tot_ded    with 0
               replace GRPS_ACU->Tot_sal    with 0
               GRPS_ACU->(qunlock())
            endif

         endif

      endif

   else  // se a guia for maior que R$ 25,00 e achar valor acumulado, soma, imprime e zera o acumulo gerado

      if GRPS_ACU->(dbseek(GRPS->Codigo))

         nACUMULA := GRPS_ACU->Valor_acum

         nTOTSEG  += GRPS_ACU->Tot_seg
         nTOTDED  += GRPS_ACU->Tot_ded
         nTOTEMP  += GRPS_ACU->Tot_emp
         nTOTTER  += GRPS_ACU->Tot_ter
         nTBASE1  += GRPS_ACU->Tot_sal

         if GRPS_ACU->(qrlock())

            replace GRPS_ACU->Valor_acum with 0
            replace GRPS_ACU->Tot_seg    with 0
            replace GRPS_ACU->Tot_emp    with 0
            replace GRPS_ACU->Tot_ter    with 0
            replace GRPS_ACU->Tot_ded    with 0
            replace GRPS_ACU->Tot_sal    with 0

            GRPS_ACU->(qunlock())

         endif

      else

         nACUMULA := 0

      endif

   endif

   // IMPRESSAO DA GUIA _____________________________________________________

   if ! qlineprn() ; return ; endif

   @ prow()  ,000 say XCOND1+XACARTA

//   @ prow()+1,075 say iif(!empty(GRPS->Cgc),"1","2")
//   @ prow()  ,098 say iif(!empty(GRPS->Cgc),GRPS->Cgc,GRPS->Cei)

   @ prow()  ,105 say "2100"

   if cAMBIENTE == "M"
      @ prow()+2 ,090 say cCOMPET
   else
      @ prow()+2 ,090 say "13/" + left(cANOMES,1) + subs(cANOMES,2,1) + subs(cANOMES,3,1) + subs(cANOMES,4,1)
   endif

   if empty(GRPS->Cgc)
      @ prow()+2,090 say ""
   else
      @ prow()+2,090 say GRPS->Cgc
   endif

//    @ prow()+1,075 say GRPS->Cod_fpas

   if empty(GRPS->Cgc)
      @ prow()+2,002 say ""
   else
      @ prow()+2,002 say left(XRAZAO,45)
   endif

   @ prow()  ,105 say nTOTSEG + nTOTEMP - nTOTDED picture cPIC

   if empty(GRPS->Cgc)
      @ prow()+2,002 say ""
      @ prow()+1,002 say ""
   else
      @ prow()+2,002 say Rtrim(GRPS->Endereco) + " - " + Rtrim(GRPS->Bairro)
      @ prow()+1,002 say "Cep - " + transform(GRPS->Cep,"@R 99.999-999") + " Telefone - " + GRPS->Telefone
   endif

   CGM->(dbseek(GRPS->Cgm))

   if empty(GRPS->Cgc)
      @ prow()+1,002 say ""
   else
      @ prow()+1,002 say alltrim(CGM->Municipio) + " - " + CGM->Estado
   endif

// if CONFIG->Gr_simples != "S"
//    @ prow()+2,115 say nTOTEMP picture cPIC
// else
//    @ prow()+2,0 say space(1)
// endif

// @ prow()+1,005 say XRAZAO

   if CONFIG->Gr_simples == "S"
      @ prow()+2,105 say nTOTTER picture cPIC
   else
      @ prow()+2,105 say Transform(0,cPIC)
   endif

//   @ prow()+1,115 say nTOTDED picture cPIC

   if CONFIG->Gr_simples != "S"
      nSOMA :=  nTOTSEG - nTOTDED
   else
      nSOMA :=  nTOTSEG + nTOTEMP + nTOTTER + nTOTDED
   endif

   @ prow()+4,105 say nSOMA picture cPIC

//   @ prow()+1,057 say nQUANTFUN picture "999"

//   @ prow()+2,040 say nTBASE1 picture cPIC

//   if CONFIG->Gr_simples != "S"
//      @ prow()+2,040 say nTBASE2 picture cPIC
//   else
//      @ prow()+2,0 say space(1)
//   endif

//   @ prow()+2,040 say GRPS->Cod_sat

//   @ prow()+2,005 say cMENSA1
//   @ prow()+1,005 say cMENSA2

   @ prow()+8,000 say ""

   if GRPS->(qrlock())
      replace GRPS->Segurados  with  nTOTSEG
      replace GRPS->Total      with  nSOMA
      GRPS->(qunlock())
   endif

   qstopprn(.F.)

return


Function i_inss
Parameters cMATRICULA
LANC->(dbgotop())
if LANC->(dbseek(cANOMES+cMATRICULA+"MS910")) // LOCALIZAR SAL. INSS DO MES
   return LANC->Valor
else
   return 0
endif
